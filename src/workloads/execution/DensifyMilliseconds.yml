SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: |
  This workload test tests the performance of the $densify stage with millisecond step intervals.

Actors:
- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
  - Repeat: 1
    Database: &db test
    Threads: 1
    CollectionCount: 1
    DocumentCount: 10000
    BatchSize: &batchSize 30000 # Documents will be roughly 5 bytes in size, and we won't generate more than 30k documents, which is less than 1mb.
    Document:
      partitionKey: {^RandomInt: {min: 1, max: 100}}
      # Test a subset of units that have different characteristics.
      number: {^RandomInt: {min: 0, max: 20000}} # Seperate codepath for numeric DensifyValues.
      milliseconds: {^RandomDate: {min: "2021-01-01T00:00:00.000Z", max: "2021-01-01T00:00:20.000Z"}} # Most basic date unit.
      hours: {^RandomDate: {min: "2021-01-01", max: "2023-01-01"}} # Date unit with constant number of milliseconds.
      months: {^RandomDate: {min: "2021-01-01", max: "4000-01-01"}} # Date unit with non-constant number of milliseconds.
  - &Nop {Nop: true}
  - *Nop
  - *Nop

# $densify stages always add a $sort on the field that is being densified, so this phase adds 
# indexes on the date/number fields so that we aren't performing an in-memory sort.
- Name: CreateIndex
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - Repeat: 1
    Database: *db
    Operations:
    - OperationName: RunCommand
      OperationCommand:
        createIndexes: Collection0
        indexes: 
        - key: {milliseconds: 1}
          name: milliseconds
  - *Nop
  - *Nop

- Name: Quiesce
  Type: QuiesceActor
  Threads: 1
  Database: *db
  Phases:
  - *Nop
  - *Nop
  - Repeat: 1
  - *Nop

- Name: DensifyMilliseconds
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - Repeat: 10
    Database: *db
    Operations:

    # Metrics are grouped by the step unit they operate with (numeric, millisecond, hour, month).
    # Each group has a metric for each possible codepath (Partition/no partition, explicit/full/partitioned bounds).

    # Millisecond metrics. Dates are stored in milliseconds, so in theory, these metrics 
    # should be almost identical to the numeric case.
    - OperationMetricsName: FullDensifySmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            range: {
              bounds: "full", 
              step: &smallStep 3, 
              unit: "millisecond"
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: FullDensifyLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            range: {
              bounds: "full", 
              step: &largeStep 8, 
              unit: "millisecond"
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: FullDensifyByPartitionSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              bounds: "full", 
              step: *smallStep, 
              unit: "millisecond"
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: FullDensifyByPartitionLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              bounds: "full", 
              step: *largeStep, 
              unit: "millisecond"
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: PartitionedDensifyByPartitionSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              bounds: "partition",  
              unit: "millisecond", 
              step: *smallStep
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: PartitionedDensifyByPartitionLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              bounds: "partition",  
              unit: "millisecond", 
              step: *largeStep
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExplicitRangeDensifySmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            range: {
              step: *smallStep, 
              unit: "millisecond", 
              bounds: [
                {^RandomDate: {min: "2021-01-01T00:00:02.000Z", max: "2021-01-01T00:00:10.000Z"}}, 
                {^RandomDate: {min: "2021-01-01T00:00:10.000Z", max: "2021-01-01T00:00:20.000Z"}}
              ]
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExplicitRangeDensifyLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            range: {
              step: *largeStep, 
              unit: "millisecond", 
              bounds: [
                {^RandomDate: {min: "2021-01-01T00:00:02.000Z", max: "2021-01-01T00:00:10.000Z"}}, 
                {^RandomDate: {min: "2021-01-01T00:00:10.000Z", max: "2021-01-01T00:00:20.000Z"}}
              ]
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExplicitRangeDensifyByPartitionSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              step: *smallStep, 
              unit: "millisecond", 
              bounds: [
                {^RandomDate: {min: "2021-01-01T00:00:02.000Z", max: "2021-01-01T00:00:10.000Z"}}, 
                {^RandomDate: {min: "2021-01-01T00:00:10.000Z", max: "2021-01-01T00:00:20.000Z"}}
              ]
            }
          }
        }]
        cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExplicitRangeDensifyByPartitionLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "milliseconds", 
            partitionByFields: ["partitionKey"], 
            range: {
              step: *largeStep, 
              unit: "millisecond", 
              bounds: [
                {^RandomDate: {min: "2021-01-01T00:00:02.000Z", max: "2021-01-01T00:00:10.000Z"}}, 
                {^RandomDate: {min: "2021-01-01T00:00:10.000Z", max: "2021-01-01T00:00:20.000Z"}}
              ]
            }
          }
        }]
        cursor: {batchSize: *batchSize}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - replica
    branch_name:
      $neq:
      - v4.0
      - v4.2
      - v4.4
      - v5.0
